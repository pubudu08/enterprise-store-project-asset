<%

/*
 Description: The class is used to perform validations on a field name value pair
 GET /api/validations/assets/{type}/{fieldName}/{fieldValue}     Returns a message object indicating
 whether the field is correct
 Filename: validations_api_router.jag
 Created Date: 8/10/2013
 */
require('/modules/publisher.js').exec(function (ctx) {

    var config = require('/config/publisher.json');
    var caramel = require('caramel');
    var carbon = require('carbon');
    var utility = require('/modules/utility.js').rxt_utility();

    var router = require('/modules/router-g.js').router();
    var routeManager = new router.Router();

    var log = new Log();

    routeManager.register('POST', 'publisher', '/publisher/api/project/validate/{id}', function (context) {
        var resourceID = context.params.id;

        var projectName = context.post['projectName'];
        var projectType = context.post['projectType'];
        var osgiService;
        var artifactManager;
        var artifact;
        var adminService;
        var status;
        var result;

        if (projectType.toLocaleLowerCase() === 'svn' || projectType.toLocaleLowerCase() === 'github') {
            artifactManager = rxtManager.getArtifactManager('vcs');

            artifact = artifactManager.get(resourceID);

            adminService = carbon.server.osgiServices('org.wso2.carbon.utility.versioncontrol.IRepository');

            for (var i = 0; i < adminService.size(); i++) {
                var id = adminService.get(i).getRepositoryType();
                if (id.toLocaleLowerCase() === artifact.attributes.overview_serverType.toLocaleLowerCase()) {
                    osgiService = adminService.get(i);

                }
            }
            status = osgiService.isRepositoryExist(artifact.attributes.interface_username, artifact.attributes.interface_password, projectName);

            result = {
                success: Boolean(status),
                status: status
            };

            print(result);
            osgiService = null;

        } else if (projectType.toLocaleLowerCase() === 'bamboo' || projectType.toLocaleLowerCase() == 'jenkins') {

            artifactManager = rxtManager.getArtifactManager('cis');

            artifact = artifactManager.get(resourceID);

            adminService = carbon.server.osgiServices('org.wso2.carbon.utility.continuousintegration.IContinuousIntegration');

            for (var i = 0; i < adminService.size(); i++) {
                var id = adminService.get(i).getCISType();
                if (id.toLocaleLowerCase() === artifact.attributes.overview_serverType.toLocaleLowerCase()) {
                    osgiService = adminService.get(i);

                }
            }
            status = osgiService.isCISProjectExist(artifact.attributes.interface_username, artifact.attributes.interface_password, artifact.attributes.interface_serverURL, projectName);

            result = {
                success: Boolean(status),
                status: status
            };

            print(result);
            osgiService = null;

        } else if (projectType.toLocaleLowerCase() === 'jira') {

            artifactManager = rxtManager.getArtifactManager('iss');

            artifact = artifactManager.get("401c18de-4afb-4627-b094-4192b68eeb43");

            adminService = carbon.server.osgiServices('org.wso2.carbon.utility.issuetracker.IIssueTracker');

            for (var i = 0; i < adminService.size(); i++) {
                var id = adminService.get(i).getIssueTrackerType();
                if (id.toLocaleLowerCase() === artifact.attributes.overview_serverType.toLocaleLowerCase()) {
                    osgiService = adminService.get(i);

                }
            }
            status = osgiService.isIssueTrackerProjectExist(artifact.attributes.interface_username, artifact.attributes.interface_password, projectName);

            result = {
                success: Boolean(status),
                status: status
            };

            print(result);
            osgiService = null;

        } else if (projectType.toLocaleLowerCase() === 'redmine') {

            artifactManager = rxtManager.getArtifactManager('pms');

            artifact = artifactManager.get("6ca33257-0f57-4c55-a36c-182d309c848f");

            adminService = carbon.server.osgiServices('org.wso2.carbon.utility.projectmanagement.IProjectManagement');

            for (var i = 0; i < adminService.size(); i++) {
                var id = adminService.get(i).getPMSType();
                if (id.toLocaleLowerCase() === artifact.attributes.overview_serverType.toLocaleLowerCase()) {
                    osgiService = adminService.get(i);

                }
            }

            log.info("Actual key :" +"cd1a2076f7d7a155a0e13e2b05553ac26e27eeb7" );
            log.info("key :" +artifact.attributes.interface_apiKey );
            status = osgiService.isPMSProjectExist(artifact.attributes.interface_serverURL, artifact.attributes.interface_apiKey, projectName);

            result = {
                success: Boolean(status),
                status: status
            };

            print(result);
            osgiService = null;

        } else {

        }
    });

    var securityModule = require('/modules/security/security.manager.js').securityManagementModule();

    var sm = securityModule.cached();

    //This will short circuit the handling of the requests
    var passed = sm.check(session, function () {
        response.sendError(401);
    });

    //Stop servicing the request if the check failed
    if (passed) {

        var user = require('store').user;
        var publisher = require('/modules/publisher.js').publisher(request, session);

        var rxtManager = publisher.rxtManager;
        var modelManager = publisher.modelManager;
        var tagModule = require('/modules/tag.management.js').tagModule();
        routeManager.handle(request, response);
    }

}, request, response, session);
%>
